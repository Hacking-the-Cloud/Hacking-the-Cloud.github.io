<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Enumeration on Hacking the Cloud</title><link>https://hackingthe.cloud/aws/enumeration/</link><description>Recent content in Enumeration on Hacking the Cloud</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><atom:link href="https://hackingthe.cloud/aws/enumeration/index.xml" rel="self" type="application/rss+xml"/><item><title>Unauthenticated Enumeration of IAM Users and Roles</title><link>https://hackingthe.cloud/aws/enumeration/enum_iam_user_role/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/enumeration/enum_iam_user_role/</guid><description>Original Research: Spencer Gietzen
Link to Tool: GitHub
Link to Pacu Module: GitHub
With just the account id of a target you can enumerate the names of IAM users and roles by abusing Resource-Based Policies.
There are a few ways to do this, for example, Pacu&amp;rsquo;s module will attempt to change the AssumeRole policy of a role in your account and specify a role in another account.
Another way would be to use S3 Bucket Policies.</description></item><item><title>Whoami - Get Principal Name From Keys</title><link>https://hackingthe.cloud/aws/enumeration/whoami/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/enumeration/whoami/</guid><description>After finding or stealing IAM credentials during an assessment you will need to identify what they are used for, or if they are valid. The most common method for doing so would be the get-caller-identity API call. This is beneficial for a few reasons, in particular that it requires no special permissions to call.
Unfortunately (while unlikely) there is the possibility that this API call may be monitored for sensitive accounts.</description></item></channel></rss>