<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Post Exploitation on Hacking the Cloud</title><link>https://hackingthe.cloud/aws/post_exploitation/</link><description>Recent content in Post Exploitation on Hacking the Cloud</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><atom:link href="https://hackingthe.cloud/aws/post_exploitation/index.xml" rel="self" type="application/rss+xml"/><item><title>User Data Script Persistence</title><link>https://hackingthe.cloud/aws/post_exploitation/user_data_script_persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/post_exploitation/user_data_script_persistence/</guid><description>When using EC2 instances a common design pattern is to define a user data script to be run when an instance is first started or after a reboot. These scripts are typically used to install software, download a config, etc. Additionally these scripts are run as root or System which makes them even more useful. Should we gain access to an EC2 instance we may be able to persist by abusing user data scripts via two different methods.</description></item><item><title>AWS Consoler</title><link>https://hackingthe.cloud/aws/post_exploitation/aws_consoler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/post_exploitation/aws_consoler/</guid><description>Original Research: Ian Williams
Link to Tool: GitHub
When performing an AWS assessment you will likely encounter IAM Credentials. Traditionally, the majority of these that you would find would only be usable from the AWS CLI. Using a tool called AWS Consoler you can create links that will allow you to access the AWS Console. In this example we will walk through gathering credentials and using those credentials along with Consoler to generate a Console link.</description></item><item><title>Intercept SSM Communications</title><link>https://hackingthe.cloud/aws/post_exploitation/intercept_ssm_communications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/post_exploitation/intercept_ssm_communications/</guid><description>Original Research: Nick Frichette
Proof of Concept: GitHub
The SSM Agent is responsible for allowing EC2 instances to communicate with SSM services. The agent authenticates with SSM via the IAM role and the credentials in the Metadata Service. As a result, if you gain access to an EC2 instance or its IAM credentials you can spoof the agent and intercept EC2 Messages and SSM Sessions.
For an in depth explanation of how this works, please see the original research.</description></item><item><title>Role Chain Juggling</title><link>https://hackingthe.cloud/aws/post_exploitation/role-chain-juggling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/post_exploitation/role-chain-juggling/</guid><description>Original Research: Daniel Heinsen
Link to Tool: GitHub
When doing an assessment in AWS you may want to maintain access for an extended period of time. You may not have the ability to create a new IAM user, or create a new key for existing users. How else can you extend your access? Role Chain Juggling.
Role chaining is a recognized functionality of AWS in that you can use one assumed role to assume another one.</description></item><item><title>S3 File ACL Persistence</title><link>https://hackingthe.cloud/aws/post_exploitation/s3_acl_persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hackingthe.cloud/aws/post_exploitation/s3_acl_persistence/</guid><description>Requirements For this scenario to work, you will need to have s3:PutBucketAcl, s3:PutObjectAcl, or PutObjectVersionAcl on the target s3 bucket or associated object.
Purpose When doing an assessment in AWS you may want to maintain access for an extended period of time, but you may not have the ability to create a new IAM user, create a new key for existing users, or even perform IAM role-chain juggling. How else can you extend your access?</description></item></channel></rss>